// Generated by gencpp from file pncc_msgs/Gear.msg
// DO NOT EDIT!


#ifndef PNCC_MSGS_MESSAGE_GEAR_H
#define PNCC_MSGS_MESSAGE_GEAR_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace pncc_msgs
{
template <class ContainerAllocator>
struct Gear_
{
  typedef Gear_<ContainerAllocator> Type;

  Gear_()
    : value(0)  {
    }
  Gear_(const ContainerAllocator& _alloc)
    : value(0)  {
  (void)_alloc;
    }



   typedef uint8_t _value_type;
  _value_type value;



  enum {
    GEAR_P = 0u,
    GEAR_R = 1u,
    GEAR_N = 2u,
    GEAR_D = 3u,
    GEAR_1 = 4u,
    GEAR_2 = 5u,
    GEAR_3 = 6u,
    GEAR_4 = 7u,
    GEAR_5 = 8u,
    GEAR_6 = 9u,
    GEAR_7 = 10u,
    GEAR_8 = 11u,
    GEAR_9 = 12u,
    GEAR_10 = 13u,
    GEAR_11 = 14u,
    GEAR_12 = 15u,
  };


  typedef boost::shared_ptr< ::pncc_msgs::Gear_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::pncc_msgs::Gear_<ContainerAllocator> const> ConstPtr;

}; // struct Gear_

typedef ::pncc_msgs::Gear_<std::allocator<void> > Gear;

typedef boost::shared_ptr< ::pncc_msgs::Gear > GearPtr;
typedef boost::shared_ptr< ::pncc_msgs::Gear const> GearConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::pncc_msgs::Gear_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::pncc_msgs::Gear_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace pncc_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'pncc_msgs': ['/home/wuhaisheng/Workspace/catkin_integration/src/interfaces/ads_internal/ros/pncc/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::pncc_msgs::Gear_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::pncc_msgs::Gear_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::pncc_msgs::Gear_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::pncc_msgs::Gear_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::pncc_msgs::Gear_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::pncc_msgs::Gear_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::pncc_msgs::Gear_<ContainerAllocator> >
{
  static const char* value()
  {
    return "7c8b6d8644724f061fa1138ce21b31f0";
  }

  static const char* value(const ::pncc_msgs::Gear_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x7c8b6d8644724f06ULL;
  static const uint64_t static_value2 = 0x1fa1138ce21b31f0ULL;
};

template<class ContainerAllocator>
struct DataType< ::pncc_msgs::Gear_<ContainerAllocator> >
{
  static const char* value()
  {
    return "pncc_msgs/Gear";
  }

  static const char* value(const ::pncc_msgs::Gear_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::pncc_msgs::Gear_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint8 GEAR_P = 0\n\
uint8 GEAR_R = 1\n\
uint8 GEAR_N = 2\n\
uint8 GEAR_D = 3\n\
uint8 GEAR_1 = 4\n\
uint8 GEAR_2 = 5\n\
uint8 GEAR_3 = 6\n\
uint8 GEAR_4 = 7\n\
uint8 GEAR_5 = 8\n\
uint8 GEAR_6 = 9\n\
uint8 GEAR_7 = 10\n\
uint8 GEAR_8 = 11\n\
uint8 GEAR_9 = 12\n\
uint8 GEAR_10 = 13\n\
uint8 GEAR_11 = 14\n\
uint8 GEAR_12 = 15\n\
\n\
\n\
uint8 value\n\
";
  }

  static const char* value(const ::pncc_msgs::Gear_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::pncc_msgs::Gear_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.value);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Gear_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::pncc_msgs::Gear_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::pncc_msgs::Gear_<ContainerAllocator>& v)
  {
    s << indent << "value: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.value);
  }
};

} // namespace message_operations
} // namespace ros

#endif // PNCC_MSGS_MESSAGE_GEAR_H
